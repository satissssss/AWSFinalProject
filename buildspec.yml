---
version: 0.2

# env:
#   variables:
#     ENVIRONMENT: dev
#     IMAGE_REPO_NAME_API: test-component-api
#     IMAGE_REPO_NAME_WEB: test-component-web
#     IMAGE_NAME_API: events-api
#     IMAGE_NAME_WEB: events-web
#     IMAGE_TAG: latest
#     AWS_DEFAULT_REGION: us-east-1
#     ACCOUNTID: 065145552369

# phases:
#   install:
#     commands:
#       - echo Installing dependencies for events-api...
#       - cd events-api && npm install
#       - echo Installing dependencies for events-website...
#       - cd ../events-website && npm install
#       - cd ..

#   pre_build:
#     commands:
#       - echo Build completed. Starting Docker operations...
#       - echo Logging in to Amazon ECR...
#       - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

#   build:
#     commands:
#       - echo Building Docker image for events-api...
#       - cd events-api && docker build -t $IMAGE_REPO_NAME_API .
#       - echo Tagging Docker image for events-api...
#       - docker tag $IMAGE_REPO_NAME_API:$IMAGE_TAG $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_API:$IMAGE_NAME_API:$IMAGE_TAG
#       - echo Pushing Docker image to ECR for events-api...
#       - docker push $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_API:$IMAGE_NAME_API:$IMAGE_TAG

#       - echo Building Docker image for events-website...
#       - cd ../events-website && docker build -t $IMAGE_REPO_NAME_WEB .
#       - echo Tagging Docker image for events-website...
#       - docker tag $IMAGE_REPO_NAME_WEB:$IMAGE_TAG $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_WEB:$IMAGE_NAME_WEB:$IMAGE_TAG
#       - echo Pushing Docker image to ECR for events-website...
#       - docker push $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_WEB:$IMAGE_NAME_WEB:$IMAGE_TAG

# artifacts:
#   files: []

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    ACCOUNTID: 065145552369

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - |
        if [ -d "events-api" ]; then
          echo "Building events-api"
          cd events-api
          IMAGE_REPO_NAME="test-component-api"
          IMAGE_NAME="events-api"
          IMAGE_TAG="latest"
          docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_NAME:$IMAGE_TAG
          docker push $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_NAME:$IMAGE_TAG
        fi
      - |
        if [ -d "events-website" ]; then
          echo "Building events-website"
          cd events-website
          IMAGE_REPO_NAME="test-component-web"
          IMAGE_NAME="events-web"
          IMAGE_TAG="latest"
          docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_NAME:$IMAGE_TAG
          docker push $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_NAME:$IMAGE_TAG
        fi

artifacts:
  files: []  